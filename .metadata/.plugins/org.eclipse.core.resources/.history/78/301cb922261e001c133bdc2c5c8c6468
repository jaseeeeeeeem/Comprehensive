package stepDefinitions;

import cucumber.api.PendingException;
import cucumber.api.java.en.Given;
import cucumber.api.java.en.When;
import cucumber.api.java.en.Then;
import cucumber.api.junit.Cucumber;
import pageobject.HomePage;
import pageobject.LoftBed;
import resources.base;

import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.junit.runner.RunWith;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;


@RunWith(Cucumber.class)
public class stepDefinition extends base {
	private Logger log=LogManager.getLogger(stepDefinition.class.getName());

    @Given("^user is in the homepage$")
    public void user_is_in_the_homepage() throws Throwable {
    	initialiseDriver();
		log.info("initialised driver");
		driver.get(prop.getProperty("url"));
		log.info("Page Entered");
		driver.manage().window().maximize();
		HomePage hp= new HomePage(driver);
		WebDriverWait wd= new WebDriverWait(driver,10);
		wd.until(ExpectedConditions.visibilityOf(hp.returnClosePopup()));
		hp.returnClosePopup().click();
		Thread.sleep(2000L);
    }

    @When("^user moves to kids section and clicks Loft Beds$")
    public void user_moves_to_kids_section_and_clicks_loft_beds() throws Throwable {
    	WebDriverWait wd= new WebDriverWait(driver,10);
    	HomePage hp= new HomePage(driver);
    	Actions a=new Actions(driver);
		wd.until(ExpectedConditions.visibilityOf(hp.returnKids()));
		a.moveToElement(hp.returnKids()).build().perform();
		wd.until(ExpectedConditions.elementToBeClickable(hp.returnLoftBed()));
		a.moveToElement(hp.returnLoftBed()).click().build().perform();
    }

    @Then("^the page displayed should have the heading Loft Beds$")
    public void the_page_displayed_should_have_the_heading_loft_beds() throws Throwable {
    	LoftBed lb=new LoftBed(driver);
		if(lb.returnHeading().getText().contains("Loft Beds"))
		{
			Assert.assertTrue(true);
		}
		else {
			Assert.assertTrue(false);
		}
    }

}